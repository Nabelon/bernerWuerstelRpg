package customTrigger
import ClosureEvents
import ClosureTimers

vec2 array creepRespawnPositions
real array creepRespawnDirection
real creepRespawnTime = 10.0

public class CustomTrigger
    static function addInitialTriggers()
        EventListener.add(EVENT_PLAYER_UNIT_DEATH) ->
            let t = GetTriggerUnit()
            if(t.getOwner().getId() == PLAYER_NEUTRAL_AGGRESSIVE)
                let gold = (t.getLevel() + 10) * 5
                let goldText = CreateTextTagUnitBJ("+"+gold.toString(), t, 0, 10, 90, 85, 0, 0)
                goldText.setVelocity(0, 0.02)
                doAfter(2.0)->
                    goldText.destr()

                for u in GetUnitsInRangeOfLocAll(1000.0, GetTriggerUnit().getLoc())
                    if(u.isType(UNIT_TYPE_HERO) and (u.getOwner().getId() != PLAYER_NEUTRAL_AGGRESSIVE))
                        
                        let exp = (t.getLevel()*100*(t.getLevel()+10)/max(t.getLevel()+10,u.getLevel())).floor()
                        u.addXp(exp, true)
                        
                        u.getOwner().addGold(gold)
                        let expText = CreateTextTagUnitBJ(exp.toString()+"exp", u, 0, 10, 0, 80, 50, 0)
                        expText.setVelocity(0, 0.02)
                        doAfter(2.0)->
                            expText.destr()
                        
        //creep respawn				
        //set positions
        int tmpInt = 1
        creepRespawnPositions[0]= vec2(0,0)
        for u in GetUnitsInRectAll(GetPlayableMapRect())
            if u.getOwner().getId() == PLAYER_NEUTRAL_AGGRESSIVE
                creepRespawnPositions[tmpInt]= u.getPos()
                u.setUserData(tmpInt)
                tmpInt++
        //respawn trigger	
        EventListener.add(EVENT_PLAYER_UNIT_DEATH) ->
            let t=GetTriggerUnit()
            if(t.getOwner().getId() == PLAYER_NEUTRAL_AGGRESSIVE and t.getUserData() > 0)
                doAfter(creepRespawnTime)->
                    vec2 pos = creepRespawnPositions[t.getUserData()]
                    let u = CreateUnit(Player(PLAYER_NEUTRAL_AGGRESSIVE), t.getTypeId(), pos.x, pos.y, 0)
                    u.setUserData(t.getUserData())
        //select hero
        EventListener.add(EVENT_PLAYER_UNIT_ATTACKED) ->
            let t=GetTriggerUnit()
            let a=GetAttacker()
            let pos = gg_rct_Rez_0.randomPoint()
            
            if(a.getTypeId() == 'e002' and t.isType(UNIT_TYPE_HERO))
                CreateUnit(Player(a.getOwner().getId()), t.getTypeId(), pos.x, pos.y, 0)
                PanCameraToTimedForPlayer(a.getOwner(), pos.x, pos.y,0)
                RemoveUnit(a)
        
    
/*
//===========================================================================
// Trigger: Untitled Trigger 002
//===========================================================================
function Trig_Untitled_Trigger_002_Actions takes nothing returns nothing
    call CreateTextTagLocBJ("TRIGSTR_029", GetUnitLoc(GetTriggerUnit()), 0, 10, 100, 100, 100, 0)
    call SetTextTagVelocityBJ(GetLastCreatedTextTag(), 64, 90)
endfunction

//===========================================================================
function InitTrig_Untitled_Trigger_002 takes nothing returns nothing
    set gg_trg_Untitled_Trigger_002=CreateTrigger()
    call TriggerRegisterAnyUnitEventBJ(gg_trg_Untitled_Trigger_002, EVENT_PLAYER_UNIT_DEATH)
    call TriggerAddAction(gg_trg_Untitled_Trigger_002, function Trig_Untitled_Trigger_002_Actions)
endfunction

//===========================================================================
function InitCustomTriggers takes nothing returns nothing
    call InitTrig_Untitled_Trigger_001()
    call InitTrig_ReviveTimer()
    call InitTrig_Untitled_Trigger_002()
endfunction
*/