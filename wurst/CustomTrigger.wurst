package CustomTrigger
import ChatTrigger
import ClosureEvents
import ClosureTimers
import HashMap
import UnitIndexer
import Drops
import GlobalObjects
import LinkedList
HashMap<int,CreepRespawnInfo> creepInfo = new HashMap<int,CreepRespawnInfo>()
real creepRespawnTime = 35.0
LinkedList<string> itemSlots = new LinkedList<string>()..add("Body Armor")..add("Helmet")..add("Off-Hand")
    ..add("Boots")..add("Main-Hand")..add("Accessory")..add("Wings")
public class CreepRespawnInfo
    function set(vec2 v, angle a)
        this.v = v
        this.a = a
    vec2 v
    angle a
public class CustomTrigger
        
    static function addInitialTriggers()

        EventListener.add(EVENT_PLAYER_UNIT_DEATH) ->
            let t = GetTriggerUnit()
            if(t.getOwner().getColor() == PLAYER_COLOR_BROWN or t.getOwner().getColor() == PLAYER_COLOR_BLACK_AGGRESSIVE)
                if(creepInfo.has(t.getIndex()))
                    Drops.dropItem(t)
                    doAfter(creepRespawnTime)->
                        let cInfo = creepInfo.get(t.getIndex())
                        let c = createUnit(t.getOwner(),t.getTypeId(),cInfo.v,cInfo.a)
                        creepInfo.put(c.toUnitIndex().getIndex(), creepInfo.get(t.getIndex()))
                        creepInfo.remove(t.getIndex())
                        t.remove()

                       
                //give bounty
                let gold = Pow((t.getLevel()).toReal()+4,1.2).toInt()
                let goldText = CreateTextTagUnitBJ("+"+gold.toString(), t, 0, 10, 90, 85, 0, 0)
                goldText.setVelocity(0, 0.02)
                doAfter(2.0)->
                    goldText.destr()

                for u in GetUnitsInRangeOfLocAll(1000.0, GetTriggerUnit().getLoc())
                    if(u.isType(UNIT_TYPE_HERO) and (u.getOwner().getColor() != PLAYER_COLOR_BROWN and u.getOwner().getColor() != PLAYER_COLOR_BLACK_AGGRESSIVE) and u.isAlive() and u.getTypeId() != 'N00B')
                        
                        let exp = (t.getLevel()*10*(t.getLevel()+10)/max(t.getLevel()+10,u.getLevel())).floor()
                        u.addXp(exp, true)
                        
                        u.getOwner().addGold(gold)
                        let expText = CreateTextTagUnitBJ(exp.toString()+"exp", u, 0, 10, 0, 80, 50, 0)
                        expText.setVelocity(0, 0.02)
                        doAfter(2.0)->
                            expText.destr()
            //player revival
            if(t.isType(UNIT_TYPE_HERO) and (t.getOwner().getColor() != PLAYER_COLOR_BROWN and t.getOwner().getColor() != PLAYER_COLOR_BLACK_AGGRESSIVE))
                //revive hero
                let ti = CreateTimer()
                let reviveTime = 5 + Pow(t.getLevel().toReal(),0.5)
                StartTimerBJ(ti, false, reviveTime)
                let tiDialog = CreateTimerDialogBJ(ti,t.getOwner().getName() + "revives in ")
                doAfter(reviveTime)->
                    DestroyTimerDialog(tiDialog)
                    ReviveHero(t, gg_rct_Rez_0.getCenter().x, gg_rct_Rez_0.getCenter().y, true)

                   
        //creep respawn			
        //set positions
        for u in GetUnitsInRectAll(GetPlayableMapRect())
            if (u.getOwner().getId() == PLAYER_COLOR_BROWN.getPlayer().getId() or u.getOwner().getColor() == PLAYER_COLOR_BLACK_AGGRESSIVE)
                let c = new CreepRespawnInfo()
                c.set(u.getPos(), u.getFacingAngle())
                creepInfo.put(u.toUnitIndex().getIndex(), c)
                
        //select hero
        EventListener.add(EVENT_PLAYER_UNIT_ATTACKED) ->
            let t=GetTriggerUnit()
            let a=GetAttacker()
            let pos = gg_rct_Rez_0.randomPoint()
            
            if(a.getTypeId() == 'e002' and t.isType(UNIT_TYPE_HERO))
                unit u = CreateUnit(Player(a.getOwner().getId()), t.getTypeId(), pos.x, pos.y, 0)
                GlobalObjects.playerObjects.get(a.getOwner().getId()).uHero = u
                u = CreateUnit(Player(a.getOwner().getId()), 'N00B', pos.x, pos.y, 0)
                u.setPathing(false)
                GlobalObjects.playerObjects.get(a.getOwner().getId()).uBackpack = u
                PanCameraToTimedForPlayer(a.getOwner(), pos.x, pos.y,0)
                RemoveUnit(a)
                
        //check if player is allowed to wear item
        EventListener.add(EVENT_PLAYER_UNIT_PICKUP_ITEM) ->
            let t = GetTriggerUnit()
            let i = GetManipulatedItem()
            if((not (t.getOwner().getColor() == PLAYER_COLOR_BROWN or t.getOwner().getColor() == PLAYER_COLOR_BLACK_AGGRESSIVE)) and t.getTypeId() != 'N00B')
                if(t.getLevel() < i.getLevel())
                    t.removeItem(i)
                    i.setPos(t.getPos())
                    print("Level must be " + i.getLevel().toString())
                //check for gearslots
                for slot in itemSlots
                    let tmp = slot + "|r, "
                    if i.getDescription().contains(tmp)
                        for itmp in t.inventory()
                            if(itmp.getDescription().contains(tmp) and itmp != i)
                                t.removeItem(i)
                                i.setPos(t.getPos())
                                print("You already have a item in slot " + tmp)
                for c in GlobalObjects.classes
                    let tmp = GlobalObjects.idToClass.get(c) + "|r"
                    if i.getDescription().contains(tmp)
                        t.removeItem(i)
                        i.setPos(t.getPos())
                        print("Your class cannot wear this")
                
        //all chat trigger
        EventListener.add(EVENT_PLAYER_CHAT_FILTER) ->
            let input = GetEventPlayerChatString()
            let p = GetTriggerPlayer()
            ChatTrigger.chatMessage(input, p)

    